name: Build & Deploy cxqabotcontainerapp   # uses the “2” secret set

# ──────────────────────────────────────────────────────────────
# Trigger:
#   • Any push to main
#   • Manual run via the Actions tab  (workflow_dispatch)
# ──────────────────────────────────────────────────────────────
on:
  push:
    branches: [ main ]
  workflow_dispatch:

# ──────────────────────────────────────────────────────────────
# Environmentwide constants
# ──────────────────────────────────────────────────────────────
env:
  ACR_LOGIN_SERVER: cxqacontaineracr.azurecr.io          # ACR login server
  IMAGE_REPO:        cxqabotcontainerapp                 # Repo name inside ACR
  RESOURCE_GROUP:    cxqa_resource_group                 # RG that holds the app
  CONTAINER_APP:     cxqabotcontainerapp                 # Target Container App
  IMAGE_TAG:         ${{ github.sha }}                   # Image tag = commit SHA
  IMAGE_FULL:        ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_REPO }}:${{ env.IMAGE_TAG }}

# Needed for azure/login with OIDC; keeps permissions tight
permissions:
  id-token: write
  contents: read

# ──────────────────────────────────────────────────────────────
# Single job: build container image → push to ACR → update app
# ──────────────────────────────────────────────────────────────
jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
    # 1 ▸ Pull repo contents
    - name: Checkout repository
      uses: actions/checkout@v3

    # 2 ▸ Azure login with the SECOND service-principal creds
    - name: Azure login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS2 }}

    # 3 ▸ Build the Docker image in ACR and push
    - name: Build & push image to ACR
      run: |
        az acr build \
          --registry ${{ env.ACR_LOGIN_SERVER }} \
          --image    ${{ env.IMAGE_REPO }}:${{ env.IMAGE_TAG }} \
          .

    # 4 ▸ Deploy that image to the new Container App
    - name: Deploy to Azure Container Apps
      uses: azure/container-apps-deploy@v1
      with:
        resourceGroup:     ${{ env.RESOURCE_GROUP }}
        containerAppName:  ${{ env.CONTAINER_APP }}
        imageToDeploy:     ${{ env.IMAGE_FULL }}
        registryUrl:       ${{ env.ACR_LOGIN_SERVER }}
        registryUsername:  ${{ secrets.ACR_USERNAME2 }}
        registryPassword:  ${{ secrets.ACR_PASSWORD2 }}






################
# Older container
################
# name: Build and Deploy to Azure Container Apps

# on:
#   push:
#     branches:
#       - main   # If your default branch is different, update this. 

# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest

#     steps:
#       # 1) Check out repository
#       - name: Check out repository
#         uses: actions/checkout@v3

#       # 2) Log in to Azure
#       - name: Log in to Azure
#         uses: azure/login@v1
#         with:
#           creds: ${{ secrets.AZURE_CREDENTIALS }}

#       # 3) Build & push Docker image to ACR
#       - name: Build and push Docker image
#         run: |
#           az acr build \
#             --registry cxqacontaineracr \
#             --image cxqacontainerapp:${{ github.sha }} \
#             .

#       # 4) Configure Container App to use ACR registry
#       - name: Configure Container App registry
#         run: |
#           az containerapp registry set \
#             --resource-group cxqa_resource_group \
#             --name cxqacontainerapp \
#             --server cxqacontaineracr.azurecr.io \
#             --username ${{ secrets.ACR_USERNAME }} \
#             --password ${{ secrets.ACR_PASSWORD }}

#       # 5) Deploy the new image to Azure Container Apps..
#       - name: Deploy to Azure Container Apps
#         run: |
#           az containerapp update \
#             --resource-group cxqa_resource_group \
#             --name cxqacontainerapp \
#             --image cxqacontaineracr.azurecr.io/cxqacontainerapp:${{ github.sha }}
